#pragma version =0.4.1;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

int __tact_my_balance() inline {
    return pair_first(get_balance());
}

forall X -> X __tact_not_null(X x) inline { throw_if(128, null?(x)); return x; }

global (int, slice, int, slice) __tact_context;
global cell __tact_context_sys;

(int, slice, int, slice) __tact_context_get() inline { return __tact_context; }

() __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() != 267);
}

builder __tact_store_bool(builder b, int v) inline {
    b = b.store_int(v, 1);
    return b;
}

(slice, slice) __tact_load_address(slice cs) inline {
    slice raw = cs~load_msg_addr();
    __tact_verify_address(raw);
    return (cs, raw);
}

builder __tact_store_address(builder b, slice address) inline {
    __tact_verify_address(address);
    b = b.store_slice(address);
    return b;
}

(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_ref(d, kl, k, v), ());
    }
}

(slice, ((int))) __gen_read_Deploy(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

builder __gen_write_DeployOk(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell __gen_writecell_DeployOk((int) v) inline {
    return __gen_write_DeployOk(begin_cell(), v).end_cell();
}

builder __gen_write_Transferr(builder build_0, (slice, int, int) v) inline {
    var (v'sender, v'value, v'date) = v;
    build_0 = __tact_store_address(build_0, v'sender);
    build_0 = build_0.store_int(v'value, 257);
    build_0 = build_0.store_int(v'date, 257);
    return build_0;
}

cell __gen_writecell_Transferr((slice, int, int) v) inline {
    return __gen_write_Transferr(begin_cell(), v).end_cell();
}

builder __gen_write_SampleTactContract(builder build_0, (slice, cell) v) inline {
    var (v'deployer, v'transferrs) = v;
    build_0 = __tact_store_address(build_0, v'deployer);
    build_0 = build_0.store_dict(v'transferrs);
    return build_0;
}

(slice, ((slice, cell))) __gen_read_SampleTactContract(slice sc_0) inline {
    var v'deployer = sc_0~__tact_load_address();
    var v'transferrs = sc_0~load_dict();
    return (sc_0, (v'deployer, v'transferrs));
}

(slice, ((slice))) __gen_read_$init$SampleTactContract(slice sc_0) inline {
    var v'deployer = sc_0~__tact_load_address();
    return (sc_0, (v'deployer));
}

(slice, cell) $__gen_SampleTactContract_init(slice $deployer) impure inline_ref {
    var (($self'deployer, $self'transferrs)) = (null(), null());
    $self'deployer = $deployer;
    return ($self'deployer, $self'transferrs);
}

(slice, cell) __gen_load_SampleTactContract() impure inline {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~__gen_read_SampleTactContract();
    } else {
        (slice deployer) = $sc~__gen_read_$init$SampleTactContract();
        $sc.end_parse();
        return $__gen_SampleTactContract_init(deployer);
    }
}

() __gen_store_SampleTactContract((slice, cell) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = __gen_write_SampleTactContract(b, v);
    set_data(b.end_cell());
}

() $send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref {
    var (($params'bounce, $params'to, $params'value, $params'mode, $params'body, $params'code, $params'data)) = $params;
    builder $b = begin_cell();
    $b = store_int($b, 1, 2);
    $b = __tact_store_bool($b, $params'bounce);
    $b = store_int($b, 0, 3);
    $b = __tact_store_address($b, $params'to);
    $b = store_coins($b, $params'value);
    $b = store_int($b, 0, ((((1 + 4) + 4) + 64) + 32));
    if (((~ null?($params'code)) | (~ null?($params'data)))) {
        $b = __tact_store_bool($b, true);
        builder $bc = begin_cell();
        $bc = __tact_store_bool($bc, false);
        $bc = __tact_store_bool($bc, false);
        if ((~ null?($params'code))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'code));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        if ((~ null?($params'data))) {
            $bc = __tact_store_bool($bc, true);
            $bc = store_ref($bc, __tact_not_null($params'data));
        } else {
            $bc = __tact_store_bool($bc, false);
        }
        $bc = __tact_store_bool($bc, false);
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, end_cell($bc));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $body = $params'body;
    if ((~ null?($body))) {
        $b = __tact_store_bool($b, true);
        $b = store_ref($b, __tact_not_null($body));
    } else {
        $b = __tact_store_bool($b, false);
    }
    cell $c = end_cell($b);
    send_raw_message($c, $params'mode);
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

() $reply(cell $body) impure inline_ref {
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    $send(__gen_constructor_SendParameters$bounce_to_value_mode_body(true, $ctx'sender, 0, (64 + 2), $body));
}

slice $__gen_SampleTactContract_deployer((slice, cell) $self) impure inline_ref {
    var (($self'deployer, $self'transferrs)) = $self;
    return $self'deployer;
}

_ $__gen_get_deployer() method_id(130732) {
    var self = __gen_load_SampleTactContract();
    var res = $__gen_SampleTactContract_deployer(self);
    return res;
}

int $__gen_SampleTactContract_balance((slice, cell) $self) impure inline_ref {
    var (($self'deployer, $self'transferrs)) = $self;
    return __tact_my_balance();
}

_ $__gen_get_balance() method_id(104128) {
    var self = __gen_load_SampleTactContract();
    var res = $__gen_SampleTactContract_balance(self);
    return res;
}

cell $__gen_SampleTactContract_Transferrs((slice, cell) $self) impure inline_ref {
    var (($self'deployer, $self'transferrs)) = $self;
    return $self'transferrs;
}

_ $__gen_get_Transferrs() method_id(82409) {
    var self = __gen_load_SampleTactContract();
    var res = $__gen_SampleTactContract_Transferrs(self);
    return res;
}

((slice, int, int)) __gen_constructor_Transferr$sender_value_date(slice sender, int value, int date) inline {
    return (sender, value, date);
}

(((slice, cell)), ()) $__gen_SampleTactContract_receive((slice, cell) $self) impure inline {
    var ($self'deployer, $self'transferrs) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($obj'sender, $obj'value, $obj'date) = __gen_constructor_Transferr$sender_value_date($ctx'sender, $ctx'value, now());
    $self'transferrs~__tact_dict_set_int_cell(257, now(), __gen_writecell_Transferr(($obj'sender, $obj'value, $obj'date)));
    return (($self'deployer, $self'transferrs), ());
}

((int, slice, int, int, cell, cell, cell)) __gen_constructor_SendParameters$to_bounce_value_mode(slice to, int bounce, int value, int mode) inline {
    return (bounce, to, value, mode, null(), null(), null());
}

((slice, cell), ()) $__gen_SampleTactContract_receive_comment_5092b5dce0715a57dd969f5fb5a6f93025a0b02eab329470ca2b365ca0d7e93a((slice, cell) $self) impure inline {
    var ($self'deployer, $self'transferrs) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    $send(__gen_constructor_SendParameters$to_bounce_value_mode($self'deployer, true, 0, (128 + 2)));
    return (($self'deployer, $self'transferrs), ());
}

((int)) __gen_constructor_DeployOk$queryId(int queryId) inline {
    return (queryId);
}

(((slice, cell)), ()) $__gen_SampleTactContract_receive_Deploy((slice, cell) $self, (int) $deploy) impure inline {
    var ($self'deployer, $self'transferrs) = $self;
    var ($deploy'queryId) = $deploy;
    $reply(__gen_writecell_DeployOk(__gen_constructor_DeployOk$queryId($deploy'queryId)));
    return (($self'deployer, $self'transferrs), ());
}

((slice, cell), int) __gen_router_SampleTactContract((slice, cell) self, int msg_bounced, slice in_msg) impure inline_ref {
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~$__gen_SampleTactContract_receive();
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~__gen_read_Deploy();
        self~$__gen_SampleTactContract_receive_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "withdraw all" message
        if (text_op == 0x5092b5dce0715a57dd969f5fb5a6f93025a0b02eab329470ca2b365ca0d7e93a) {
            self~$__gen_SampleTactContract_receive_comment_5092b5dce0715a57dd969f5fb5a6f93025a0b02eab329470ca2b365ca0d7e93a();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = ((msg_flags & 1) == 1 ? true : false);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    
    ;; Load contract data
    var self = __gen_load_SampleTactContract();
    
    ;; Handle operation
    int handled = self~__gen_router_SampleTactContract(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(handled, 130);
    
    ;; Persist state
    __gen_store_SampleTactContract(self);
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128
    );
}

_ get_abi_ipfs() {
    return "ipfs://QmQuKYE9VTyj6kKenfb18KJksD3ZwR4ktCBZA6MkpfcC6X";
}

_ lazy_deployment_completed() {
    return get_data().begin_parse().load_int(1);
}
